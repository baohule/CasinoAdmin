# This is a basic workflow to help you get started with Actions

name: Dev

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ dev ]


  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:


env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  SERVER_HOST: ${{ secrets.DEPLOY_HOST_DEV }}
  SERVER_USER: ${{ secrets.DEPLOY_USER }}
  SERVER_KEY: ${{ secrets.DEPLOY_KEY_DEV }}

    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:

    # The type of runner that the job will run on
      runs-on: ubuntu-latest
      outputs:
        tags: ${{ steps.meta.outputs.tags }}
    # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v2

       # Login against a Docker registry except on PR
        # https://github.com/docker/login-action
        - name: Log into registry ${{ env.REGISTRY }}
          if: github.event_name != 'pull_request'
          uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        # Extract metadata (tags, labels) for Docker
        # https://github.com/docker/metadata-action
        - name: Extract Docker metadata
          id: meta
          uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
          with:
            images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

         # Build and push Docker image with Buildx (don't push on PR)
         # https://github.com/docker/build-push-action
        - name: Build and push Docker image
          uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc


          with:
             context: .
             file: Dockerfile
             push: ${{ github.event_name != 'pull_request' }}
             tags: ${{ steps.meta.outputs.tags }}
             labels: ${{ steps.meta.outputs.labels }}


  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Execute SSH Commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SERVER_HOST }}
          username: ${{ env.SERVER_USER }}
          password: ${{ env.SERVER_PASS }}
          key: ${{ env.SERVER_KEY }}
          port: 22
          script: |
            docker logout
            docker login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} ${{ env.REGISTRY }}
            docker stop webapi || true && docker rm webapi || true
            docker rmi ${{ needs.build.outputs.tags }}
            docker pull ${{ needs.build.outputs.tags }}
            docker run -d -p 8000:8080 --restart always --env-file /apps/CasinoAdmin/.env --name webapi ${{ needs.build.outputs.tags }}
